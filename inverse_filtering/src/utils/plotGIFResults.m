function[] = plotGIFResults(speechData, gfInvFilter, C, GIFparams, executionType)

	% Inputs
	% speechData
	% gfInvFilter
	% executionType: Optimization | Analysis
	% C
	% GIFparams

	t = (0:(length(speechData.gfGroundTruth)-1))/speechData.fs;   % Time vector
	figure(2);
	plot(t, speechData.gfGroundTruth, t, gfInvFilter); axis tight;
	xlabel('time (s)');
	ylabel('amplitude');
	if strcmp(C.gif.method, 'Original-IAIF') || strcmp(C.gif.method, 'IOP-IAIF')
	    title([executionType, ' ', C.gif.method,...
	        ': VTorder = ', num2str(GIFparams.VTorder),...
	        ': VTzeros = ', num2str(GIFparams.VTzeros),...
	        '; GSorder = ', num2str(GIFparams.GSorder),...
	        '; LipRad = ', num2str(GIFparams.LipRad),...
	        '; HPflag = ', num2str(GIFparams.HPflag)...
	        ]);
	elseif strcmp(C.gif.method,'GFM-IAIF')
	    title([executionType, ' ', C.gif.method,...
	        ': VTorder = ', num2str(GIFparams.VTorder),...
	        ': VTzeros = ', num2str(GIFparams.VTzeros),...
	        '; GSorder = ', num2str(GIFparams.GSorder),...
	        '; LipRad = ', num2str(GIFparams.LipRad)...
	        ]);
	elseif contains(C.gif.method,'QCP') 
	    title([executionType,' ', C.gif.method,...
	        ': VTorder = ', num2str(GIFparams.VTorder),...
	        ': VTzeros = ', num2str(GIFparams.VTzeros),...
	        '; GSorder = ', num2str(GIFparams.GSorder),...
	        '; LipRad = ', num2str(GIFparams.LipRad),...
	        '; DQ = ', num2str(GIFparams.DQ),...
	        '; PQ = ', num2str(GIFparams.PQ),...
	        '; RQ = ', num2str(GIFparams.RQ),...
	        '; STcomp = ', num2str(GIFparams.STcompensation)...
	        ]);
	end
