function [errorF, x0] = getGIFoptimExpr(C, speechData, timeMarks)
    VTorder = optimvar('VTorder', 1, 'LowerBound', C.gif.VTorder(1), 'UpperBound', C.gif.VTorder(3), 'Type', 'integer');
    GSorder = optimvar('GSorder', 1, 'LowerBound', C.gif.GSorder(1), 'UpperBound', C.gif.GSorder(3), 'Type', 'integer');
    LipRad = optimvar('LipRad', 1, 'LowerBound', C.gif.LipRad(1), 'UpperBound', C.gif.LipRad(3), 'Type', 'continuous');

    x0.VTorder = C.gif.VTorder(2);
    x0.GSorder = C.gif.GSorder(2);
    x0.LipRad = C.gif.LipRad(2);

    if strcmp(C.gif.method, 'Original-IAIF')
        HPflag = optimvar('HPflag', 1, 'LowerBound', C.gif.HPflag(1), 'UpperBound', C.gif.HPflag(3), 'Type', 'integer');
        x0.HPflag = C.gif.HPflag(2);
        [errorF] = fcn2optimexpr(@optimizationGIF_Original_IAIF,...
                                VTorder,...
                                GSorder,...
                                LipRad,...
                                HPflag,...
                                speechData,...
                                timeMarks,...
                                C,...
                                'OutputSize',...
                                [1,1]...
                                );
    elseif strcmp(C.gif.method, 'IOP-IAIF')
        HPflag = optimvar('HPflag', 1, 'LowerBound', C.gif.HPflag(1), 'UpperBound', C.gif.HPflag(3), 'Type', 'integer');
        x0.HPflag = C.gif.HPflag(2);
        [errorF] = fcn2optimexpr(@optimizationGIF_IOP_IAIF,...
                                VTorder,...
                                GSorder,...
                                LipRad,...
                                HPflag,...
                                speechData,...
                                timeMarks,...
                                C,...
                                'OutputSize',...
                                [1,1]...
                                );
    elseif strcmp(C.gif.method, 'GFM-IAIF')
        [errorF] = fcn2optimexpr(@optimizationGIF_GFM_IAIF,...
                                VTorder,...
                                GSorder,...
                                LipRad,...
                                speechData,...
                                timeMarks,...
                                C,...
                                'OutputSize',...
                                [1,1]...
                                );
    elseif contains(C.gif.method,'QCP')
        DQ = optimvar('DQ', 1, 'LowerBound', C.gif.DQ(1), 'UpperBound', C.gif.DQ(3), 'Type', 'continuous');
        PQ = optimvar('PQ', 1, 'LowerBound', C.gif.PQ(1), 'UpperBound', C.gif.PQ(3), 'Type', 'continuous');
        RQ = optimvar('RQ', 1, 'LowerBound', C.gif.RQ(1), 'UpperBound', C.gif.RQ(3), 'Type', 'continuous');
        STcompensation = optimvar('STcompensation', 1, 'LowerBound', C.gif.STcompensation(1), 'UpperBound', C.gif.STcompensation(3), 'Type', 'integer');
        x0.DQ = C.gif.DQ(2); 
        x0.PQ = C.gif.PQ(2);
        x0.RQ = C.gif.RQ(2);
        x0.STcompensation = C.gif.STcompensation(2);
        [errorF] = fcn2optimexpr(@optimizationGIF_QCP,...
                                VTorder,...
                                GSorder,...
                                LipRad,...
                                DQ,...
                                PQ,...
                                RQ,...
                                STcompensation,...
                                speechData,...
                                timeMarks,...
                                C,...
                                'OutputSize',...
                                [1,1]...
                                );
    end
end